题目描述
在一个国家仅有1分，2分，3分硬币，将钱N兑换成硬币有很多种兑法。请你编程序计算出共有多少种兑法。

输入
每行只有一个正整数N，N小于32768。

输出
对应每个输入，输出兑换方法数。

样例输入
2934
12553

样例输出
718831
13137761

//CODE
#include<cstdio>
/*
首先看能兑换多少个三分硬币的，然后当三分硬币分别为
1，2，3，.... n时有多少个2分硬币的，为什么要这样确定了
因为只要还可以兑换出三分硬币和二分硬币的那么剩下的价值
一定可以让价值为1的硬币塞满。开头为什么count为N/3+1呢？
因为可以这样想，假设N=7，那么只包含3分硬币和1分硬币的组合方式为：
3，3，1； 3，1，1，1，1；所以N/3是实际上可以容纳三分硬币的个数。
而增加1是因为可以全部换成1分的硬币。
temp = (N-3*i)/2不会重复,因为硬币的价值是递增的，
只有当i的值为N/3时，t的值可以为0或者1。所以不会重复。
*/
int main(){
	int i;
	int count,N,temp;

	while(scanf("%d",&N)!=EOF){
      count=N/3+1;////可以换成3分硬币个数加上全为1分硬币
	  for(i=0;i<=N/3;i++){
		  temp=(N-3*i)/2;////i个3分可以换多少个2分硬币
		   count += temp;
	  }///end for
	  printf("%d\n",count);
	}
	return 0;
}