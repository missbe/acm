题目描述
某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前5名学生发奖学金。期末，每个学生都有3门课的成绩：语文、数学、英语。先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，如果两个同学总分和语文成绩都相同，那么规定学号小的同学排在前面，这样，每个学生的排序是唯一确定的。

任务：先根据输入的3门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前5名学生的学号和总分。注意，在前5名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。

例如，在某个正确答案中，如果前两行的输出数据（每行输出两个数：学号、总分）是：

7 279

5 279

这两行数据的含义是：总分最高的两个同学的学号依次是7号、5号。这两名同学的总分都是279（总分等于输入的语文、数学、英语三科成绩之和），但学号为7的学生语文成绩更高一些。如果你的前两名的输出数据是：

5 279

7 279

则按输出错误处理，不能得分。


输入
输入包含多组测试数据，每个测试数据有n+1行。

第1行为一个正整数n，表示该校参加评选的学生人数。

第2到n+1行，每行有3个用空格隔开的数字，每个数字都在0到100之间。第j行的3个数字依次表示学号为j-1的学生的语文、数学、英语的成绩。每个学生的学号按照输入顺序编号为1~n（恰好是输入数据的行号减1）。

所给的数据都是正确的，不必检验。 


输出
对于每个测试数据输出5行，每行是两个用空格隔开的正整数, 依次表示前5名学生的学号和总分。两个相邻测试数据间用一个空行隔开。

样例输入
6
90 67 80
87 66 91
78 89 91
88 99 77
67 89 64
78 89 98
8
80 89 89
88 98 78
90 67 80
87 66 91
78 89 91
88 99 77
67 89 64
78 89 98

样例输出
6 265
4 264
3 258
2 244
1 237

8 265
2 264
6 264
1 258
5 258

//CODE
#include<cstdio>

struct Sort{
   int chinese;
   int total;
   int id;
};
bool isExchange(Sort a,Sort b){
	if(a.total > b.total){
		return true;
	}else if(a.total==b.total){
		if(a.chinese > b.chinese){
			return true;
		}else if(a.chinese==b.chinese){
			if(a.id < b.id)
				return true;
		}
	}
	return false;
}
int main(){
	int N,i,j,k;
	int chinese,math,english;
	Sort *p,temp;

	while(scanf("%d",&N)!=EOF){
		p=new Sort[N+1];

		for(i=1;i<=N;i++){
		  scanf("%d %d %d",&chinese,&math,&english);
		  p[i].total=chinese+math+english;
		  p[i].id=i;
		  p[i].chinese=chinese;
		}
		for(i=1;i<=N-1;i++){
			k=i;
			for(j=i+1;j<=N;j++){
				if(isExchange(p[j],p[k]))
					k=j;
			}
			if(k!=i){
			  temp=p[k];
			  p[k]=p[i];
			  p[i]=temp;
			}
		}
		for(i=1;i<=5;i++){
		  printf("%d %d\n",p[i].id,p[i].total);
		}
		printf("\n");
		delete p;
	}
	return 0;
}